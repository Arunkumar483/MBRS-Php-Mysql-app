AWSTemplateFormatVersion: "2010-09-09"
Description: This RDS substack comprises of RDS and its components(RDS subnet group and security group) which will be deployed in Private Subnets in different AZs.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: MRBS APP

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
  
  VPC:
    Description: A reference to the created VPC
    Type: String
  
  PrivateSubnet3:
    Description: A reference to the private subnet in the 1st Availability Zone for RDS instance
    Type: String

  PrivateSubnet4:
    Description: A reference to the private subnet in the 2nd Availability Zone  for RDS instance
    Type: String

  DBInstance:
    Description: DB Instance for RDS
    Type: String
    Default: mrbs
  
  DBClass:
    Description: Database instance class
    Type: String
    Default: db.t2.micro
    

  DBPassword:
    Description: DB Password
    Type: String
  #no echo it will hinder the password
  
  DBUser:
    Description: DB User
    Type: String
  
  DBName:
    Description: DB Name
    Type: String

  MultiAZDb:
    Default: 'false'
    Description: Create a Multi-AZ MySQL Amazon RDS database instance
    Type: String
    AllowedValues:
      - 'true'
      - 'false'

  DBSecurityGroup:
    Description: A reference to the db security group
    Type: String

Resources:
  
  # SGBaseEgressForSQLDB:
  #  Type: 'AWS::EC2::SecurityGroupEgress'
  #  Properties:
  #     GroupId: !Ref EC2SecurityGroup #the requests from port 80 coming from the alb security group can access the web instance 
  #     IpProtocol: tcp
  #     FromPort: 3306
  #     ToPort: 3306
  #     SourceSecurityGroupId: !GetAtt DBSecurityGroup.GroupId # to which security group the rule should
  
  
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Private subnet group for rds instance
      DBSubnetGroupName: RDSSubnetGroup
      SubnetIds:
        - !Ref PrivateSubnet3
        - !Ref PrivateSubnet4
      Tags:
        - Key: Name
          Value: Arun CF SubnetGroup

  RDSdbinstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      AllocatedStorage: '5'
      # storage
      DBInstanceClass: !Ref DBClass
      # dbclass
      Engine: MySQL
      MultiAZ: !Ref MultiAZDb
      #MultiAZDatabase
      DBSubnetGroupName: !Ref RDSSubnetGroup
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups: !Ref DBSecurityGroup

Outputs: 
  RDSHost:
    Value: !GetAtt RDSdbinstance.Endpoint.Address
    Description : Endpoint of MRBS RDS

  